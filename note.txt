// to begin this project
mkdir xmlsitemap
cd xmlsitemap
code .
npm init -y
npm install express body-parser node-fetch cors sitemapper --save
npm install nodemon --save-dev

// in package.json
    "start-dev": "nodemon server"

// create basic back end and front end directories and files
mkdir server
touch server/index.js
mkdir public
touch public/app.js public/index.html

// 
test basic GET POST code 

// run the server
npm run start-dev


// Without front end is ok, this is a back end only project that produce JSON result,
// This front end got redirected the path is for testing, everything can be test with Postman.


// in app.js
let backendRoute = new URL("http://localhost:8000/api");



// github repo
echo "# xmlsitemap" >> README.md
touch .gitignore
// in .gitignore
    # dependencies
    /node_modules
    node_modules/
git init
git add .
git commit -m "get links from given xml sitemap url"
git branch -M main
git remote add origin https://github.com/fruit13ok/xmlsitemap.git
git push -u origin main



////////////////////////////////////// sitemap //////////////////////////////////////////
// use "sitemapper" to parse the xml sitemap to get to its key/value
https://www.npmjs.com/package/sitemapper/v/2.0.0
https://joeyg.me/blog/coding/generating-a-better-sitemap-for-your-nuxt-project


/////////////////////////////////////// memory leak /////////////////////////////////////////
https://www.google.com/search?q=how+to+locate+web+page+memory+leak&rlz=1C5CHFA_enUS807US807&oq=how+to+locate+web+page+memory+leak&aqs=chrome..69i57j33i22i29i30.23303j0j7&sourceid=chrome&ie=UTF-8
https://stackoverflow.com/questions/15970525/how-to-find-js-memory-leaks